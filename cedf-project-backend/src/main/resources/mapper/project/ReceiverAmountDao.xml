<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.nakong.modules.project.dao.ReceiverAmountDao">
	<sql id="selectReceiverAmount">
		SELECT
		tra.id,
		tra.project_id projectId,
		tra.receiver_id receiverId,
		tra.amount_type amountType,
	   (select sum(ifnull(amount,0)) from tb_receiver_amount_detail k where k.receiver_amount_id = tra.id) cashAmount,
		tra.meterial_amount meterialAmount,
		tra.insert_time insertTime,
		tra.insert_user insertUser,
		tr.receive_company receiveCompany,
		tra.relate_person relatePerson,
		tra.receive_telephone receiveTelephone,
		tra.receive_date receiveDate,
		tp.project_no projectNo,
		tp.project_name projectName,
		tra.second_unit secondUnit
		FROM
		tb_receiver_amount tra
		LEFT JOIN tb_receiver tr ON tra.receiver_id = tr.id
		LEFT JOIN tb_project tp ON tra.project_id = tp.id
		<where>
			<if test="query.projectNo !=null and query.projectNo !=''">
				AND tp.project_no LIKE concat('%', #{query.projectNo}, '%')
			</if>
			<if test="query.receiveCompany !=null and query.receiveCompany !=''">
				AND (tr.receive_company LIKE concat('%', #{query.receiveCompany}, '%') OR tra.second_unit LIKE concat('%', #{query.receiveCompany}, '%'))
			</if>
			<if test="query.amountType !=null and query.amountType !=''">
				AND tra.amount_type = #{query.amountType}
			</if>
			<if test="query.startDate !=null and query.startDate !=''">
				AND tra.receive_date &gt;= date_format(#{query.startDate},'%Y-%m-%d')
			</if>
			<if test="query.endDate !=null and query.endDate !=''">
				AND tra.receive_date &lt;= date_format(#{query.endDate},'%Y-%m-%d 23:59:59')
			</if>
		</where>
	</sql>
	<select id="selectReceiverAmountList" parameterType="io.nakong.common.utils.Query" resultType="io.nakong.modules.project.vo.ReceiverAmountVo">
		<include refid="selectReceiverAmount"/>
		order by tp.project_no desc, tra.receive_date desc
		limit #{query.offset},#{query.limit}
	</select>
	<select id="selectReceiverAmountCount" parameterType="io.nakong.common.utils.Query" resultType="int">
		select count(1) from (
		<include refid="selectReceiverAmount"/>
		) temp
	</select>
	
	 <insert id="insertAndReturnId" useGeneratedKeys="true" keyColumn="id" keyProperty="id" parameterType="io.nakong.modules.project.entity.ReceiverAmountEntity" >
			   <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
		          SELECT LAST_INSERT_ID()
		      </selectKey>
           insert into  `tb_receiver_amount` (
								  `project_id`,
								  `receiver_id` ,
								  `cash_amount`,
								  `insert_user`,
								  `insert_time`,
								  `amount_type` ,
								  `receive_date`,
								  `second_unit`,
								  `receive_telephone`,
								  `relate_person`,
								  `contract_no` )
								  values (
								   #{projectId},
								   #{receiverId},
								   #{cashAmount},
								   #{insertUser},
								   now(),
								   #{amountType},
								   #{receiveDate},
								   #{secondUnit},
								   #{receiveTelephone},
								   #{relatePerson},
								   #{contract_no}   
							  )

    </insert>


</mapper>